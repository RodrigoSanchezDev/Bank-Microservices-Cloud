server:
  port: 8443
  ssl:
    enabled: true
    key-store: classpath:keystore/bank-bff.p12
    key-store-password: bankbff123
    key-store-type: PKCS12
    key-alias: bank-bff

spring:
  application:
    name: api-gateway-bff
  cloud:
    compatibility-verifier:
      enabled: false
    config:
      enabled: false
    gateway:
      httpclient:
        ssl:
          useInsecureTrustManager: true
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        # Account Service Routes
        - id: account-service-route
          uri: lb://account-service
          predicates:
            - Path=/api/accounts/**
          filters:
            - name: CircuitBreaker
              args:
                name: accountServiceCircuitBreaker
                fallbackUri: forward:/fallback/accounts
            - RemoveRequestHeader=Cookie
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
                methods: GET,POST,PUT,DELETE
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms

        # Customer Service Routes
        - id: customer-service-route
          uri: lb://customer-service
          predicates:
            - Path=/api/customers/**
          filters:
            - name: CircuitBreaker
              args:
                name: customerServiceCircuitBreaker
                fallbackUri: forward:/fallback/customers
            - RemoveRequestHeader=Cookie
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
                methods: GET,POST,PUT,DELETE
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms

        # Transaction Service Routes
        - id: transaction-service-route
          uri: lb://transaction-service
          predicates:
            - Path=/api/transactions/**
          filters:
            - name: CircuitBreaker
              args:
                name: transactionServiceCircuitBreaker
                fallbackUri: forward:/fallback/transactions
            - RemoveRequestHeader=Cookie
            - name: Retry
              args:
                retries: 3
                statuses: BAD_GATEWAY,GATEWAY_TIMEOUT
                methods: GET,POST,PUT,DELETE
                backoff:
                  firstBackoff: 50ms
                  maxBackoff: 500ms

      globalcors:
        cors-configurations:
          "[/**]":
            allowedOrigins:
              - "https://localhost:3000"
              - "https://localhost:4200"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - "*"
            allowCredentials: true
            maxAge: 3600

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.value}
    secure-port-enabled: false # HTTP temporalmente
    non-secure-port-enabled: true # Habilitar HTTP
    non-secure-port: 8080

# JWT Configuration
jwt:
  secret: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
  expiration: 86400000 # 24 hours in milliseconds

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
    instances:
      accountServiceCircuitBreaker:
        baseConfig: default
      customerServiceCircuitBreaker:
        baseConfig: default
      transactionServiceCircuitBreaker:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 3s

# Logging
logging:
  level:
    root: INFO
    com.duoc.bank.bff: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
